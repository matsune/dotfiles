[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
hook_add = '''
" Tab completion
inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
let g:lsp_diagnostics_echo_cursor = 1

function s:on_lsp_buffer_enabled() abort
  setlocal omnifunc=lsp#complete
  setlocal signcolumn=yes
  if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
  nnoremap <buffer> <silent><C-]> <plug>(lsp-definition)
  nnoremap <buffer> <silent><C-K> <plug>(lsp-hover)
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
depends = [
  'vim-lsp'
]

[[plugins]]
repo = 'junegunn/fzf'
# use Homebrew 
rtp = '/usr/local/opt/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = [
  'fzf'
]
hook_add = '''
nnoremap <S-o> :Files<CR>
nnoremap <S-f> :Rg<CR>
let g:fzf_layout = { 'window': { 'width': 1, 'height': 0.4, 'yoffset': 1, 'border': 'horizontal' } }
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <silent><C-e> :NERDTreeToggle<CR>
nnoremap <silent><C-e> :NERDTreeToggle<CR>
nnoremap <leader>e :NERDTreeFind<CR>
let NERDTreeShowHidden=1

" vim 9 issue https://github.com/preservim/nerdtree/issues/1321
let g:NERDTreeMinimalMenu=1
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_async = 0
highlight clear SignColumn
'''

[[plugins]]
repo = 'osyo-manga/vim-over'
hook_add = '''
nnoremap <leader>m :OverCommandLine<CR>%s/
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
" let g:airline_theme = 'papercolor'
let g:airline_powerline_fonts=1
set laststatus=2
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#wordcount#enabled = 0
let g:airline#extensions#default#layout = [['a', 'b', 'c'], ['x', 'y', 'z']]
let g:airline_section_c = '%t'
let g:airline_section_x = '%{&filetype}'
let g:airline_section_z = '%3l:%2v %{airline#extensions#lsp#get_warning()} %{airline#extensions#lsp#get_error()}'
let g:airline#extensions#ale#error_symbol = ' '
let g:airline#extensions#ale#warning_symbol = ' '
let g:airline#extensions#default#section_truncate_width = {}
let g:airline#extensions#whitespace#enabled = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = [
  'vim-airline'
]

[[plugins]]
repo = 'blakewilliams/numetal.vim'
hook_add = '''
set termguicolors
set background=dark
colorscheme numetal
augroup customize_colors
  au!
  autocmd ColorScheme * highlight clear CursorLine
  autocmd ColorScheme * highlight CursorLine gui=underline cterm=underline
augroup END
'''
